# Generated by "yarp cmake"

# A cmake file to get started with for new YARP projects.
# It assumes you want to build an executable from source code in 
# the current directory.
# Replace "yarpy" with whatever your executable should be called.

cmake_minimum_required(VERSION 2.8.9)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
#LIST(APPEND CMAKE_CXX_FLAGS "-std=c++0x -O3 -ffast-math -Wall")

SET(PROJECTNAME stfiltering)
PROJECT(${PROJECTNAME})

# Find YARP.  Point the YARP_DIR environment variable at your build.
find_package(YARP REQUIRED)

#FIND ICUB
find_package(ICUB REQUIRED)

#find_package(ICUBcontrib REQUIRED)
find_package(emorphLib)

#Find Opencv
find_package(OpenCV REQUIRED)

#Find CUDA
find_package(CUDA REQUIRED)
INCLUDE(FindCUDA)
list(APPEND CUDA_NVCC_FLAGS "-arch=sm_20;-std=c++11;-O2;-DVERBOSE")
SET(CUDA_PROPAGATE_HOST_FLAGS OFF)
#LIST(APPEND CUDA_NVCC_FLAGS --compiler-options -std=c++11 -fno-strict-aliasing -lineinfo -use_fast_math -Xptxas -dlcm=cg)
#LIST(APPEND CUDA_NVCC_FLAGS -gencode arch=compute_20,code=sm_20)
#LIST(APPEND CUDA_NVCC_FLAGS -gencode arch=compute_30,code=sm_30)
#LIST(APPEND CUDA_NVCC_FLAGS -gencode arch=compute_35,code=sm_35)

FILE(GLOB SOURCES "*.cu" "*.cpp" "*.c" "*.h" "*.hpp")



#Include directories 
include_directories(${YARP_INCLUDE_DIRS} 
		    ${EMORPHLIB_INCLUDE_DIRS}
		    ${OpenCV_INCLUDE_DIRS}
                    ${CUDA_INCLUDE_DIRS}
		   )

#add_executable(${PROJECTNAME} ${SOURCES} ) #This is for normal CMake
cuda_add_executable(${PROJECTNAME} ${SOURCES} ) #This is for using nvcc

target_link_libraries(${PROJECTNAME} ${YARP_LIBRARIES} eMorphLib ${OpenCV_LIBS} ${CUDA_LIBRARIES})


